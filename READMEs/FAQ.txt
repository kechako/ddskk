
-*- outline -*-

             $Date: 2000/10/24 21:00:03 $
	     $Id: FAQ.txt,v 1.7 2000/10/24 21:00:03 czkmt Exp $

これは SKK に対するよくある質問と、それに対する回答集です。


* アウトラインモード概略

このファイルはアウトラインモードによって記述されています。
	
     C-c C-t (M-x hide-body)

すれば、見出しだけがご覧になれます。ご興味のある項目にカーソルを合わせ、

     C-c C-e (M-x show-entry)

すると、その項目の内容がご覧になれます。

     C-c C-c (M-x hide-entry)

で再度その項目を隠すことができます。

     C-c C-a (M-x show-all)

で全てのテキストを表示することができます。カーソル移動については、下記
の通りです。

     C-c C-n (次の項目へ移動。階層は無視)

     C-c C-p (前の項目へ移動。階層は無視)

     C-c C-f (同じ階層の次の項目へ移動)

     C-c C-b (同じ階層の前の項目へ移動)


* SKK のなぜなに。

** [Q.] 最新のバージョンは ?

現在、開発版の最新版は Daredevil SKK 11.x、安定版は SKK 10.6x です。

** [Q.] SKK はシンプルなのが長所だったのでは? 色々使わない機能があり過ぎるような...

かような議論は 10 年来行われてきており、結論は出ていませんが、事実として
現在まで開発が続けられています。

「シンプルな操作性の維持と多機能化・高機能化は両立できる」

というのが現在の開発陣の考えであるようです。

多機能化と言っても多くはユーザーオプションによって無効にすることができま
すし、skk.el 本体が複雑化しないようにモジュール化されています。

** [Q.] SKK はどのバージョンの Emacs で使えますか ?

Emacs 19.28 or later をベースとした Mule 2 or 3
Emacs 20.2 or later
--with-mule オプション付きでコンパイルされたXEmacs 20.4 or later
Meadow 1.00, 1.01, 1.10
Mule for Windows 1.21, 1.22

がサポートしようとする対象の Emacs です。Daredevil では、Nemacs 上で動
くようです。

** [Q.] SKK はどんなオペレーティングシステムで使えますか ?

基本的にサポート対象の Emacs がその OS で動いているなら、SKK の基本的
な機能は動くはずです。

拡張機能については、UNIX の各種コマンドを前提としているものがいくつか
あります (look とか ispell とか)。これらがお使いの OS にもあれば使える
場合が多いでしょう。

Mac OS 版の Emacs でも動くようですが、インストールが UNIX make コマン
ド、あるいは make.bat を前提にしているので、手作業で、skk/SKK-MK を評
価するなどの手間がかかるでしょう (APEL についても同様の苦しみがあるは
ずですが)。Perl で動く make について、

At Thu, 10 Aug 2000 19:06:31 +0900,
SUZUKI Norio wrote:
 
> CPANのmodules/by-category/Development_SupportにMake-1.00.tar.gzという
> perlで書かれたmoduleがあります。　MacPerlで動くかどうかは分かりませんが
> 試す価値はあるでしょう。

という情報もあります。MacPerl で動作を確認した人がいらっしゃったら、情
報をお寄せ下さい。

** [Q.] Emacs に付属の SKK を使っているのですが...

まず初めに言っておかなければなりませんが、

 「Emacs には SKK は付いていません」(Nemacs 3.3.2 には SKK 2.25 が付い
ていたりしますが...)

Emacs 20 には KKC というプログラムが付属し、Leim では KKC を利用した日本
語入力機能を提供しています。これは SKK の辞書を利用しているため、ミニバッ
ファに「Loading skk/skkdic...done」と表示されますが、決して SKK が動いて
いる理由ではありません。

開発中の Emacs ではこの問題は既に解決されています。

** [Q.] 開発版の SKK は何故、`Daredevil' などと言う branch 名がついているのですか？

無責任な開発がどんどん続き、何が起こっても知りませんよ、と警告している
のにこれを使おうとなさるあなたにぴったりのネーミングではありませんか
;-p。

開発陣の一人が講読している某ラジオ英会話講座の、ある日のスキット名が
「Daredevil なんとか」で、その内容は「とにかくやってみよう。う
ぎゃぁぁぁ、やられたぁ」というものでした。これがあまりに自分の開発ポリ
シーに合致するので、ここから `Daredevil' の名をいただいたのであります。

** [Q.] APEL に依存せずに SKK だけで済むように開発してもらえませんか？

同様の議論が過去散々あり、本家は検討したいと言い、一方、ぼく (中島) は
APEL を使わない SKK の開発はやらない、と宣言したこともあって、部外の人
から SKK community 分裂か？、と冷かされたりもしました。

悪いけどぼくはやりません。せっかく良いものがあるのにそれを利用しないの
は、無駄な努力だと思うからです。APEL から独立する努力をする時間があれ
ば、その時間を使って APEL にもっと貢献したいです。

APEL よりもっと遥かに効率の良いものができれば別ですが、それまでは APEL
を利用し続けます。

もちろん、あなたが APEL 非依存版の作成をやりたいんだったら止めはしませ
ん。Openlab に参加してやってもらっても良いですよ。但し、Maintrunk,
Daredevil とは別 branch にして下さいね。

** [Q.] SKK の中に更にいくつもモードがあって良く分かりません。

*** 入力モード

入力される文字別のモードには下記のものがあります。

      +----------------------+-------- skk-mode -----+----------------------+
      |                      |                       |                      |
      |                      |                       |                      |
  skk-j-mode           skk-latin-mode      skk-jisx0208-latin-mode   skk-abbrev-mode
  (かな/カナモード)     (ASCII モード)           (全英モード)        (SKK abbrev mode)

ASCII モードと言うのは、C-j により skk-j-mode に移行する他は、全てのキー
バインドは SKK を起動する前の状態と同一のモードです。SKK への入口が見
えているモードと言えるかもしれません。

SKK abbrev モードというのはアスキー文字を利用した変換ができるモードで
す。このファイルの後半にが活用例が出ていますので、ご覧下さい。

*** 辞書登録モード

辞書登録モードは、かな/カナモード、SKK abbrev モードで変換した際、候補
が見つからないときに辞書登録をするサブモードです。

*** 変換モード

入力文字がそのままバッファに挿入され、変換をしないモードを確定入力モー
ドと言い、■モード、と呼びます。

バッファに「▽」のマーカが出て変換する文字の見出し語を入力するモードを
▽モードと呼びます。

▽モードから SPC を押して変換候補の選択をするモードを▼モードと呼びま
す。バッファに挿入されている「▽」のマーカが「▼」に変わります。

* SKK の入手から導入まで。

** [Q.] 最新版の SKK はどこから入手できますか？

http://openlab.ring.gr.jp/skk/cvs-ja.html をご覧の上、Openlab の CVS
から入手できるものが最も新しいです。

最も新しくなくて良ければ、http://openlab.ring.jp/skk/daredevil-ja.html
もしくは http://openlab.ring.jp/skk/maintrunk-ja.html からどうぞ。

** [Q.] SKK を入手しましたが、辞書が付いていないのですが。

http://openlab.ring.jp/skk/dic-ja.html から別に入手して下さい。Openlab
の CVS には最新版があります。

** [Q.] SKK を入手しましたが、サーバが付いていないのですが。

http://www.ne.jp/asahi/bdx/info/software/jp-dbskkd.html から dbskkd を
入手して下さい。

SKK 10.x, Daredevil ともにサーバの種類、バージョンには依存していないは
ずなので、SKK 9.6 以前添付の skkserv や ruby で書いた rskkserv なども
使えます。

** [Q.] APEL って何ですか？

APEL は A Portable Emacs Library の略で、XEmacs/GNU Emacs 間、あるいは
Emacs のそれぞれのバージョン間の差異を吸収するパッケージです。

元は FLIM/SEMI のために開発されたものですが、旧 SKK で培ったバージョン
間の work around のノウハウを全部反映してもらいましたので、APEL 自体、
大幅に汎用性がアップしています。

** [Q.] 色々別に入手するものがあってインストールが難しいですね。昔は全部一つで簡単だったのに。

辞書やサーバーの配布が別なのは、それぞれアップデートされる頻度が異なる
からです。毎回超特大のアーカイブを入手させられてもあなたは文句を言うで
しょう。

また、APEL のおかげでそれだけ多くの Emacsen で動きます。APEL に感謝こそ
すれ、恨むのは筋違いでしょう。

* SKK の基本設定からお好みのカスタマイズまで。

** [Q.] インジケータをモード行の左端に置きたいのですが。

~/.skk に

(setq skk-status-indicator 'left)

と書いてみてください。

** [Q.] `.' で「．」、`,' で「，」 が入力できるようにカスタマイズしたいのですが。

~/.skk に

(setq skk-rom-kana-rule-list
      (append '(("." nil "．") ("," nil "，"))
	      skk-rom-kana-rule-list))

と書きましょう。■モード (確定入力モード) での動作が変わったはずです。

** [Q.] `wi' で、「ゐ」や「ヰ」 が入力できるようにカスタマイズしたいのですが。

一つ前の [Q.] の変形問題ですね。かな/カナモードでそれぞれ出力する文字
を変えるやり方です。

~/.skk に

(setq skk-rom-kana-rule-list
      (append '(("wi" nil ("ヰ" . "ゐ")))
	      skk-rom-kana-rule-list))

と書いてみましょう。

一番内側の cons cell は car がカナモード、cdr がかなモー
ドでの入力文字を表しています。

一つ前の [Q.] に対する答えのように、カナモード、かなモードともに入力す
る文字が変わらなければ、cons cell の代りに文字列を書くことができます。

** [Q.] skk-input-vector, skk-roma-kana-a などが見当たりませんが。



廃止されました (キッパリ)。
その昔、かな/カナモードの入力系統をカスタマイズする変数は沢山ありまし
たが、SKK 10.x 以降では skk-rom-kana-base-rule-list と
skk-rom-kana-rule-list に統合されました。

前者は標準的なキー入力を定めています。後者は、好みに左右されるものを定
義しています。いずれもユーザー変数ですが、後者はリスト操作を容易にする
ためにディフォルトの要素数を少なくしています。後者の設定は前者のものを
上書きします。

** [Q.] 検索する辞書を増やしたいのですが。

skk-search-prog-list で設定をしましょう。

まず、現在の設定を確認しましょうね。*scratch* バッファに
skk-search-prog-list と書いてそのシンボルの末尾にポイントを置いて C-j
してみましょう。例えば次のように出力されます。
 
  ((skk-search-jisyo-file skk-jisyo 0 t)
   (skk-search-server skk-aux-large-jisyo 10000))

上記の例は 2 つの要素を持ったリストになっています。設定によりもっと多
くの要素があるかもしれません。

各要素は検索する関数と辞書を指定したリストです。要素の順番に検索がなさ
れます。上記の例だとまず最初に skk-jisyo (個人辞書) を
skk-search-jisyo という関数を使ってリニアアーチ、次に
skk-search-server という関数を使って skk-aux-large-jisyo をサーチしま
す。

変換の際、SPC を押しますよね？  1 回 SPC を押すと、SKK は候補が見つか
るまでの間、skk-search-prog-list の要素を前から読んでいって検索を行な
い、見つかればそこで一旦検索を止めてユーザに候補を提示します。

ユーザが SPC を更に押してゆき最初の要素のプログラムが見つけた候補が尽
きると、SKK は中断していた個所から再び skk-search-prog-list の次の要素
を見つけ、ここで指定されている関数を使って検索する、で新しい候補が見つ
かればまた提示する、というシステムになっています。

では、サーバを使って検索した後に、JIS 第 2 水準の単漢字辞書、
SKK-JISYO.JIS2 を検索したい場合はどうすれば良いでしょう？  もう分かり
ますよね？  サーバを使った検索式の次に第 2 水準辞書の検索式を書いたリ
ストを skk-search-prog-list に指定すれば良いのです。.skk に次のように
書きましょう。

(setq skk-search-prog-list
  '((skk-search-jisyo-file skk-jisyo 0 t)
    (skk-search-server skk-aux-large-jisyo 10000)
    (skk-search-jisyo-file "~/dic/SKK-JISYO.JIS2" 0))

skk-search-jisyo-file の第 2 引数、0 の数字はリニアサーチにて検索する
よう指定しています。第 2 水準辞書はあまり大きくないので、リニアサーチ
で十分でしょう。大きな辞書を検索する場合などは、

    (skk-search-jisyo-file "~/dic/SKK-JISYO.L" 10000)

のようにすると良いでしょう。SKK は Emacs のバッファに読み込まれた
"~/dic/SKK-JISYO.L" の検索リージョンのポイント差が 10000 未満になるま
ではバイナリサーチを行ない、その後リニアサーチを行ないます。大きな辞書
ではバイナリサーチを行なう方がはるかに効率が良いです。嘘だと思うなら、
SKK-JISYO.L を読み込んでリニアサーチするような設定にして試してみて下さ
い。

ちなみに、SKK-JISYO.JIS2 は、最大でもリージョン間のポイント差が 8,500
程度です。

** [Q.] 左手の小指を SHIFT で酷使したくありません。

SKK を標準の状態で使っている場合、変換のためにシフトキーを多用しますの
で小指への負担が大きくなります。

  (*) このため、ある人々は SKK を小指キラーと呼びます。

この苦しみを回避するためにここでは 2 つの方法を紹介します。

1. 親指の近くにあるキーを利用してシフトキーの代用とする。

日本語 106 キーボードのように無変換、変換などのキーがある場合は、これ
らをシフトキーの代用とすることが可能です。こうすると、例えば

   SHIFT を押しながら a を押す

というキー操作は

   無変換 を押して、その後で a を押す

という操作で置き換えることができるようになります。

それでは具体的なやり方を説明しましょう。まず、使用中の Emacs が無変換
キーを何という名前で認識しているか調べます。それには

  M-x describe-key

というコマンドを実行し、続いて 無変換キーを押してみます。XFree86 上で
なら、おそらく

  muhenkan is undefined

という答えが返ってくるでしょう。次に、この名前を使って ~/.emacs に設定
を書きこみます。以下は 無変換 = muhenkan の場合の例です。

 (if (keymapp key-translation-map)
     nil
   (setq key-translation-map (make-sparse-keymap)))

 (let ((i ?a))
   (while (<= i ?z)
     (define-key key-translation-map
                 (vector 'muhenkan i) (vector (- i 32)))
     (setq i (1+ i))))

この設定を終えると、「muhenkan - a」で 「A」が入力できるようになります。
つづいて、SKK を起動してみましょう。「muhenkan - a」で 「▽あ」となり
ます。送りの開始点も、もちろん同様の操作で指定できます。

   (*) 変数 key-translation-map の意味を調べてみてください。

       M-x describe-variable [RET] key-translation-map

2. 親指シフト入力のエミュレーション機能を利用する。

これは 1 とはかなり違ったアプローチです。SKK 本来のローマ字的入力を捨
てて、富士通のワープロ OASYS のような親指シフト入力を修得します。

    (*) 親指シフト入力の詳細については、ここでは述べません。興味がある
        場合は、日本語入力コンソーシアムの Web サイト

        http://nicola.sunicom.co.jp/

        を訪れてください。

この機能は、SKK 10 では利用できません。Daredevil SKK 11.3 以降には、
NICOLA-DDSKK というプログラムが付属しており、これをインストールすると
親指シフト入力が可能になります。インストール自体は簡単で、

 % cd experimental/nicola
 % make install 

とした後に、~/.skk に

 (setq skk-use-kana-keyboard t)
 (setq skk-kanagaki-keyboard-type 'omelet-jis)

と書くだけです。詳しいことは、NICOLA-DDSKK 付属のドキュメントを参照し
てください。

NICOLA 配列は、特別に日本語入力のために考えられた配列なので、慣れれば
非常に効率的な日本語入力ができるようになると期待されます。一方で、ロー
マ字的入力方式に慣れてしまっている人にとっては、NICOLA 配列に慣れるま
でかなり練習を要することは確かです。


* SKK 辞書関連。

** [Q.] Wnn でも Canna でも郵便番号辞書が使えるけれど、SKK では使えないの ?

CVS から辞書を取得した場合は、zipcode というディレクトリに入っています。
WWW では、 http://openlab.ring.gr.jp/skk/dic/ より入手できます。
使用方法は、zipcode/README.ja を御覧下さい。

** [Q.] SKK の辞書には、品詞情報がないんですね。

はい、そうです。品詞情報がなくとも効率の良い入力ができるシステムが SKK
です。

** [Q.] SKK には辞書をマージするプログラムは付いてないの ?

SKK 本体のパッケージには同封されていませんが、skk-tools という別パッケー
ジがあり、http://openlab.ring.gr.jp/skk/tools-ja.html から入手可能です。

** [Q.] SKK 形式の英和辞書を作る方法がある、と聞いたのですが。

edict を利用すると手軽に英和辞書ができます。edict は
ftp://ftp.u-aizu.ac.jp:/pub/SciEng/nihongo/ftp.cc.monash.edu.au/
などから入手できます。

加工には日本語の通る gawk と SKK 添付の edict2skk.awk、skk-tools の中
のプログラムを使い、下記のように行ないます。

  % jgawk -f skk-10/lisp/look/edict2skk.awk edict > temp
  % skkdic-expr temp | skkdic-sort > SKK-JISYO.E2J
  % rm temp

できた SKK-JISYO.E2J の利用方法は色々ありますが、

  % skkdic-expr SKK-JISYO.E2J + /usr/local/share/skk/SKK-JISYO.L | skkdic-sort > SKK-JISYO.L

などとして、SKK-JISYO.L とマージして使うのが手軽です。

* SKK の活用法その他。

** [Q.] abbrev モードって何ですか？

`is' => `インクリメンタル・サーチ' などのように短い英語見出しから変換
できると便利だとは思いませんか？

かな/カナモードで、`/' キーを入力してみて下さい。▽が出てアスキー文字
が入力できるようになるはずです。ここで英文字を入力して SPC を押せば変
換できます。

もちろん対応するエントリが辞書にないと単語登録モードに入りますよ。

** [Q.] abbrev モードでもっと英単語を利用した変換ができませんか？

UNIX look コマンドと skk-look.el を利用すると、色々できますよ。まず、
.skk か .emacs で `skk-use-look' を t にセットして Emacs/SKK を立ち上
げ直して下さい。

さぁ、下記のような芸当が可能になりました。

(1)英単語を補完ができます。

   ▽abstr(TAB) ---> ▽abstract 

   通常の補完機能同様、`.' で次の補完候補、`,' でひとつ前の補完候補に
   移動できます。

   SKK 形式の英和辞書があれば、ここから SPC を押して英和変換ができます
   ね。

(2)英単語をあいまいに変換して取り出すことができます。

   ▽abstr* (SPC) ---> ▼abstract 

   見出し語にアスタリスク (`*') を入れるのをお忘れなく。

(3)(2)で変換した後、更に再帰的な英和変換を行なうことができます。

   まず、`skk-look-recursive-search' の値を non-nil にセットして下さ
   い。Emacs/SKK を再起動する必要はありません。

   すると、例えば、

   ▽abstr* (SPC)

     ---> ▼abstract (SPC) -> ▼アブストラクト (SPC) -> ▼抽象 (SPC)
       -> ▼abstraction (SPC) -> ▼アブストラクション

   このように英単語 + その英単語を見出し語にした候補の「セット」を変換
   結果として出力することができます。

   この際、`skk-look-expanded-word-only' の値が non-nil であれば、再帰
   検索に成功した英単語の「セット」だけを出力することができます (再帰
   検索で検出されなかった英単語は無視して出力しません) 。

   もちろん、SKK 辞書に

      abstract /アブストラクト/抽象/
      abstraction /アブストラクション/

   というエントリがあることを前提としています。edict を SKK 辞書形式に
   変換すると良いですね。

** [Q.] SKK の検索で、市販の CD-ROM 辞書やネットワークの辞書サーバが利用できますか？

Lookup が扱える辞書はほとんど使えます。Lookup がインストールされている
状態で SKK をインストールすると、SKK と Lookup のゲートウェイプログラ
ム skk-lookup.el がインストールされます。

インストールで注意すべきは、make で呼び出される Emacs は
`-q -no-site-file' フラグ付きで呼ばれるので、.emacs や site-start.el
などは読み込まれないことです。ディフォルトで load-path の通っているディ
レクトリに lookup をインストールするか、SKK-CFG の中で
VERSION_SPECIFIC_LISPDIR などにディレクトリを明示することで解決できま
す。

さぁ、.emacs か .skk で skk-search-prog-list の要素に
(skk-lookup-search) を追加しましょう。他の検索エンジンよりも検索は比較
的重いので、最後の方が良いと思います。

こんな感じです。

  (setq skk-search-prog-list
        '((skk-search-jisyo-file skk-jisyo 0 t)
          (skk-search-server skk-aux-large-jisyo 10000)
          (skk-lookup-search)))

Lookup については、http://openlab.ring.gr.jp/lookup/ をご参照下さい。
ぼく (中島) は、ローカルマシンのハードディスクに広辞苑の第四版をコピー
して利用していますが、速度的には十分満足しています。ちなみにコピーした
辞書データのサイズは 45MB 弱です。

** [Q.] SKK を使い始めてから、他の FEP を使用中にも SHIFT を押してしまいます。

(T_T)

治すには SKK をやめるしかありません :-)

Emacs 上以外でも SKK みたいな操作性を実現するソフトウェアがあります。

SKK関連ソフトウェアをご覧になってください。
(progn (require 'info) (Info-goto-node "(skk)SKK関連ソフトウェア"))  ←括弧の末尾で C-x C-e しましょう。

* 化石的質問集。

** [Q.] SKK は Nemacs で使えますか ?

SKK 10.xx は使えません。

未確認情報ですが、Daredevil SKK 11.x では動いているという噂があります。
開発者の中に最近 Back to the Future した者がいる可能性は否定できませんが、
ただの Emacs オタクと考えたほうがいいでしょう。

** [Q.] SKK は Demacs で使えますか ?

SKK 10.xx は使えません。

最近、MS-DOS 7.1 上の Demacs 上で Daredevil SKK 11.x が動いているところ
が目撃され、スクープされたそうです。

ところが、DEMAgogiC Studio とかいうアプリケーションに付属のエディタも
Demacs と呼ばれているらしく、本件はかの偉大な Demacs とは関係無いだろう
とも言われています。


[end of FAQ.txt]
