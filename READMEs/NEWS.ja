-*- outline -*-

* 13.1

** 要求される APEL のバージョンが 10.7 以上になりました。

APEL 10.7 の機能のうちインストール関連の機能、とくに XEmacs 21.5 での
インストール機能に依存します。

APEL 10.6 に関する特記事項は DDSKK 12.2.0 の NEWS を参照してください。

** サポートする Emacs のバージョンが変更されました。

*** Emacs 20.7 以降、Emacs 21.1 以降、Emacs 22.1

*** XEmacs 21.4.18 以降, XEmacs 21.5 beta27 (未確定)

上記はあくまでサポートするバージョンであり、実際に動作する下限のバージョ
ンより少しだけ高めに設定されている場合がありえます。

注意点として、これらの各 Emacsen それぞれのサポート状況が異なることがあ
ります。DDSKK 13 のほぼ全機能が動作すると思われるのは Emacs 22.1 です。
それ以外の Emacsen では一部機能が動作しないか，あるいは動作テストが完了
していません。ユーザが少ないバージョンの Emacs ほど動作テストは不完全な
傾向があり、より多くのテストが望まれます。

なお、本バージョンは次期の unicode 化された Emacs (Emacs 23 以降) に暫
定的に対応するコードを含みますが、これらは全くサポートされません。CVS
先端では可能な範囲で開発版 Emacs に追随する予定です。

** インストールの際の環境変数サポートの一時停止

SKK-CFG がほぼ完全なインストール設定をサポートするため、環境変数 EMACS
と XEMACS 以外は参照しないようにしています。環境変数サポートは一部復活
する可能性はありますが、以前のように多数の変数をサポートすることはない
でしょう。

** 新しく以下のプログラムが正式サポートされました。

*** context-skk.el

*** skk-act.el

*** skk-azik.el

*** skk-hint.el

*** skk-server-completion.el

補完に対応したサーバと通信することで補完を実現します。この機能は変換時
にも使え、この場合は skk-look のような使い勝手になります。

*** skk-tankan.el

** 補完機能の拡張と改良

*** skk-completion-prog-list

ユーザは skk-search-prog-list で変換機能を自由に選べますが、それと同様
に補完機能を自由に選ぶことができるようになりました。それを指定する変数
が skk-completion-prog-list です。

*** skk-comp-use-prefix

まだかなに確定していないローマ字 prefix をみて補完する機能が実装されま
した。これを指定する変数が skk-comp-use-prefix です。

*** skk-comp の任意辞書対応

個人辞書だけでなく、任意の辞書を補完辞書として指定できるようになりまし
た。skk-completion-prog-list に

 (skk-comp-from-jisyo "/usr/share/skk/SKK-JISYO.L")

のような要素を加えます。

*** skk-look 拡張

**** abbrev モード以外で利用 (日本語補完)

*** skk-look ユーザオプション見直し

**** ユーザオプションの変更

旧来のコマンドラインオプションを指定するユーザオプションを全て廃止し
以下を新設

 skk-look-conversion-arguments
 skk-look-completion-arguments

** 変換候補・注釈表示の修飾・加工機能

変数 skk-treat-candidate-appearance-function を設定することにより、注
釈も含めた変換候補の表示のカスタマイズが可能になりました。この設定例は
etc/dot.skk などで紹介していく予定です。

この機能は候補や注釈の文字列そのものを変更することができます。また、文
字列に text property を付加して装飾して表示することもできます。この機能
は通常の候補変換時と注釈表示時、候補一覧表示時に有効です。ツールティッ
プやインラインによる表示時にも有効です。ただし、text property による修
飾機能が完全にサポートされるのは GNU Emacs 21 以降となります。それ以外
のバージョンはインライン表示とエコーエリア表示時のメッセージは text
property 非対応です。これらのバージョンで text property を有効にするに
はバッファをポップアップする必要があります。そのための設定は以下のよう
になります。

  (setq skk-annotation-show-as-message t)
  (setq skk-show-candidates-always-pop-to-buffer t)

** 数値変換有効時に非数値変換も同時に行うように変更

今まで、skk-use-numeric-conversion が non-nil だと数値変換のみ行い、非
数値変換は無効にするようになっていましたが、排他的である必要はないと考
えられたので，常に非数値変換は行うようにしました。これにより、
skk-use-numeric-conversion を有効にしている場合でも

10^-1 /deci;SI接頭語/d/デシ/
10^-2 /centi;SI接頭語/c/センチ/
10^-3 /milli;SI接頭語/m/ミリ/

などの変換もできます。

ただし、単語登録モードに入ると数値変換の候補として扱われます。

** インラインの候補一覧表示

変数 `skk-show-inline' を non-nil に設定することで、候補一覧を変換位置
の近傍に表示できます。この機能は window system に依存しないため
terminal でも利用できます。この機能は Emacs 20, XEmacs でも利用できま
すが、face 表示に対応しているのは GNU Emacs 21 以降のみです。

** ツールティップを利用した候補一覧・注釈表示

変数 `skk-show-tooltip' を non-nil に設定することで、window-system 下
にて候補一覧表示と注釈表示をバルーンヘルプにすることができるようになり
ました。これは現在 GNU Emacs 21 以降、XEmacs 21.5 以降に対応しています。
Emacs 20.7 および XEmacs 21.4 では動作しません。

** 新しい学習機能 skk-bayesian.el

experimental/bayesian に追加されました。

** 注釈参照時に Wikipedia/Wiktionary を参照する機能

SKK 辞書に直接注釈を与える機能に加えて、Wikipedia/Wiktionary を参照し
て注釈を生成する機能を追加しました。この機能を使うためには ~/.skk など
でオプション skk-show-annotation を有効にしている必要があります。

変換中に C-i をタイプすると ja.wikipedia.org, ja.wiktionary.org,
en.wikipedia.org, en.wiktionary.org の順で候補に対する注釈を探します。
みつかった時点で探索をやめ、みつかった注釈を表示します。
この C-i のキー定義は skk-annotation-wikipedia-key の設定で変更できま
す。またサイトの検索順は skk-annotation-wikipedia-sources の設定で変更
できます。また、C-1, C-2 などの prefix argument を与えると
skk-annotation-wikipedia-sources のなかの特定の 1 サイトに限定して検索
することができます。

なお、本機能は変換中以外，さらには SKK モードでない条件でも使用できま
す。その場合は region を設定して M-x skk-annotation-wikipedia-region
を実行します。このコマンドは region を設定しなくても一応動作し、その場
合は point の位置にある単語を推測して検索します。ただし欧米語以外で単
語が正しく取得されることは期待できません。

本機能は Emacs 22 の新機能である url パッケージと html2text.el に依存
します。Emacs 22 以外では対応しているバージョンのこれらプログラムを別
途インストールする必要があります。詳しくは skk-annotation.el の冒頭コ
メントを参照してください。

本機能の仕様はまだ完全には確定しておらず、また取得した html の処理が不
完全になる場合があります。

** 限定的な locale 対応

GNU Emacs 22 以降と限られた環境との組み合せにおいて、メニューの表示が
デフォルトで日本語になります。具体的には、Meadow を含む Windows 環境、
Carbon Emacs 環境、および X Window System で Emacs が GTK+ を利用しか
つ日本語 locale の環境が対象となります。

* 12.2.0

** 個人辞書の保存に関する脆弱性のフィックス

個人辞書の保存に `make-temp-name' 関数を使用していましたが、この関数に
は race condition が存在することが判明し、Emacs 21 に実装されている
`make-temp-file' 関数を使用することでこの脆弱性を回避しました。
他の version の Emacs, XEmacs における `make-temp-file' 関数のサポート
は APEL 10.6 で行われます。

APEL 10.6 については、http://emacs-w3m.namazu.org/ml/msg05365.html を
ご参照下さい。

なお、Emacs 20 では、この問題に関連し、一時ファイルが安全に生成できな
い問題があります。この問題を回避するために、環境変数 TMPDIR を各ユーザ
のみが書き込み可能なディレクトリ (例えば file mode を 0700 に設定した
~/tmp) に指定することが強く推奨されます。この環境変数を設定することで
`temp-file-name-pattern' や `temporary-file-directory' などの変数の設
定が影響を受けます。この問題について詳しくは、

  http://bugs.debian.org/cgi-bin/bugreport.cgi?archive=no&bug=192732
  http://bugs.debian.org/cgi-bin/bugreport.cgi?archive=no&bug=198567

をご参照下さい。Emacs 21 ではこの脆弱性はフィックスされています。

** 新しいユーザ変数 skk-force-registration-mode-char

この変数により、エコーエリアで候補表示中に、辞書登録モードに強制的に入
るキーキャラクタを設定することが可能になりました。

** 新しいユーザ変数 skk-comp-circulate

この変数により、見出し語の補完を行う際の候補の表示順を制御し、最後の見
出し語が表示された状態でさらに補完を行うと入力文字列に戻ることが可能に
なりました。

** 新しいユーザ変数 skk-isearch-mode-enable

この変数を `nil' に設定することにより、インクリメンタルサーチで
skk-isearch を利用しないようにすることが可能になりました。migemo を利
用したい場合などには `nil' に設定すると良いでしょう。

** skk-study.el が正式サポートの対象になりました。

これに伴い、プログラムが skk/main/experimental/skk-study.el から
skk/main/skk-study.el に移動されました。`skk-study-first-candidate',
`skk-study-max-distance' の 2 つの新しいユーザ変数が増えています (詳細
は C-h v skk-study-first-candidate などとして表示されるドキュメントを
ご参照下さい)。

** 更に実験的な experimental/skk-study.el が加わりました。

experimental/skk-study.el は学習テーマ対応です。

M-x skk-study-switch-current-theme して任意の文字列 (例えば科学の話題
を書くバッファでは science など) を入れると、以降そのバッファでは
science というテーマで学習データをアップデートします。変換時 (単語検索
時) はまず science というテーマの学習データを探し、その次に general と
いう汎用学習データを探します。

他のバッファに移ったときに、そのバッファでも科学の話題を書くのであれば、
M-x skk-study-switch-current-theme して science と入れましょう。先程学
習した science 版学習データを使用します。そのバッファでは法律について
書きたいのであれば、テーマを law などとすると science な学習データは参
照しません。学習テーマは Emacs で扱える文字列ならば、multibyte 文字列
でも構いません。

まだ十分検証されておらず、~/.skk-study のフォーマットを壊してしまう恐
れがあるため、バックアップを取っておくことを強くお勧めします。

experimental 版の skk-study-file-format-version は 0.3 です。0.2 のフォー
マットを読み込むと自動的に conversion するようになっています。
downgrade は自動化されていないのでご注意下さい。

試していみたい方は、experimental/skk-study.el を 1 つ上のディレクトリ
の skk-study.el に上書きして make して下さい。

なお、M-x skk-study-remove-theme で不要なテーマを消すことができ (テー
マ general は消せません) M-x skk-study-copy-theme であるテーマの学習デー
タを他のテーマにコピーすることができます。

** 編集の文脈に応じた自動的な latin モードへの切り替えサポート

`major-mode' がプログラム言語のモードである場合に、文脈に応じて自動的
に latinモードへ切り替えを行う機能を試験的にサポートしています。詳細は、
experimental/context-skk.el の中のドキュメントを参照して下さい。

** 単漢字変換のサポート

読みの最後に、読みの一部として @ を入力してから変換すると、一文字のみ
からなる候補に絞り込んだ上で、候補を総画数順でソートしてから変換する単
漢字変換機能を試験的にサポートしています。詳細は、
experimental/skk-tankan.el の中のドキュメントを参照して下さい。

* 12.1

** 古い Emacsen のサポート終了

以下のバージョンのサポートは打ちきりました。

 Mule 2.3 (based on Emacs 19.28 or 19.34) 以前
 Emacs 20.2 以前
 XEmacs 20.4 以前

これ以外はサポート対象ではありますが、推奨されるのは以下の Emacsen で
す。

 Emacs 20.7 以上
 XEmacs 21.4.6 以上

** 動的入力対応

キー入力時に、挿入する文字を動的に決定する機能。これは
experimental/skk-dinsert.el として開発されています。

** AZIK (拡張ローマ字入力法)

SKK で 拡張ローマ字入力法 AZIK を利用する機能。これは
experimental/skk-azik.el として開発されています。
AZIK については、以下の URL を参照下さい。
http://hp.vector.co.jp/authors/VA002116/azik/azikindx.htm

** アイコン

Emacs 21 と XEmacs において、モード行にアイコンを設置しました。


* 11.6

** Minor bug fixed.

* 11.5

** GNU Emacs 21 対応

GNU Emacs 21 に対応しました。

** 配布物に S 辞書が含まれます。

従来は別に辞書を入手する必要がありました。現在では配布物の中に S 辞書
が含まれるようになりました。

** Windows 用インストーラ (make.bat) の改良

従来の make.bat は環境変数の定義を除いた上で、make1.bat に改名されまし
た。

また、より汎用性の高いインストーラとして makeit.bat が追加されました。
使用法は このディレクトリにある README.win を参照してください。

** Web 検索エンジンによる検索

experimental/skk-w3m.el という新たなプログラムが追加されました。

通常の変換のほか、通貨の単位換算など、かなりイケてるようです。
例えば、ドルを円に換算するには

$# /(skk-w3m-query-quote-yahoo "USD" "JPY" 'postfix "円")/
$#.# /(skk-w3m-query-quote-yahoo "USD" "JPY" 'postfix "円")/

というエントリを個人辞書に追加します。

skk-w3m.el を使うには w3m をインストールする必要があります。

http://w3m.sourceforge.net

** SKK にヒントを与えて変換

experimental/skk-hint.el という新たなプログラムが追加されました。

これを使うと、通常の変換操作のなかで、SKK にヒントを与えることができま
す。SKK は与えられた読みを含んだ漢字を持つものに候補を絞ります。

** 単位換算実行変換

長さなどの単位換算ができる機能です。最新の SKK-JISYO.L を用いれば

  ▽97mile → 156.1021km

のような変換が可能です。他に yard, feet, inch を他の単位に換算できま
す。`skk-units-alist' という変数を参照してください。

** 日付挿入機能の強化

通常 @ を押すことによって日付が挿入されますが、この機能が拡張されまし
た。辞書の設定と変数の設定次第で様々な形式の日付を挿入することができま
す。標準では英語表記、日本語表記に加えて、ドイツ語表記も可能です。

以下の変数を参照してください。

 `skk-gengo-alist'
 `skk-month-alist'
 `skk-day-of-week-alist'
 `skk-default-current-date-function'

また、辞書への記入例は、最新の SKK-JISYO.L を取得して、today エントリ
を参照してください。

** 混ぜ書き辞書

tut-code/skk-mkmgk.el は混ぜ書き SKK 辞書を作成するツールです。

また、作成された混ぜ書き辞書が SKK-JISYO.mazegaki という名前で SKK 開
発ラボから配布されています。

** ちょっとオシャレ (?) なインジケータ

この機能は FSF Emacs 21 と XEmacs のみ有効です。インジケータをモード行
の左に表示する場合、カーソルの色と同じ色が付くようにしました。また、こ
のインジケータのところでマウスの第 2 ボタンをクリックすると、ポップアッ
プメニューが表示されます。メニューの項目は、初心者に役立ちそうなことを
中心に選んでいます。

(画像を使ってもっとオシャレにする、なんてことも可能です。)

** 見出し語の繰り返し入力

`Q' を押して▽モードに入り、TAB を押すと、それまでに確定した送り無しの
見出し語が挿入されます。これは昔のワープロでいうところの繰り返し入力
(テンプレート入力？) のような感じの機能といえばいいんでしょうか。

繰り返し TAB を押すことで、確定した見出し語の履歴をたどることができま
す。この履歴は `skk-kakutei-history' という変数に保持されます。また、
保持する履歴の数の最大値は `skk-kakutei-history-limit' の値によって決
まります。標準では、20 となっています。

** カタカナ語を変換によって入力

変換候補にカタカナ語が現れるようにしたい場合は ~/.skk に

 (setq skk-search-prog-list
       (skk-nunion skk-search-prog-list
                   '((skk-search-katakana))))

と書きます。この方法では、q でカタカナを入力するのに比べて、辞書登録で
きるというメリットがあります。

** 擬似サ変入力

サ行変格活用の動詞を送りあり変換できるようにするには ~/.skk に

 (setq skk-search-prog-list
       (skk-nunion skk-search-prog-list
                   '((skk-search-sagyo-henkaku))))

と書きます。


* 11.4

** 「意味」を含む辞書の実現。

experimental/skk-annotation.el という新たな実験プログラムが追加されま
した。
これに伴い、SKK 辞書に「意味(註釈)」を書きこむための仕様について議論さ
れ、Daredevil SKK 本体にはこのための機能が追加されました。

** Info のエントリの自動追加。

例えば、skk.info を /usr/local/info/ 以下にインストールした場合、
/usr/local/info/dir というファイルに skk.info を参照するためのエントリ
を自動的に書き込む機能が追加されました。

** 自動フィル機能の復活。

自動フィル機能が有効になっているバッファにおける、自動フィルの挙動を
SKK 9.6 以前のそれに戻しました。

** NICOLA-DDSKK

NICOLA-DDSKK はもはや実験版ではありません。experimental/nicola/ から
nicola/ に移されました。


* 11.3

** 基本設定の自動化。

Emacs 20 以降のために leim-list.el を用意することにより、自動的に基本
設定がされるようになった。

ただし、Emacs は起動時に load-path の最上位にある leim-list.el をロー
ドするだけなので、skk のインストールされたディレクトリより上位のディレ
クトリに leim-list.el があればこの機能は無効になる。(*)

  (*) ただし、egg/leim-list.el は load-path 上のすべての leim-list.el
      をロードするのでこの限りではない。同機能は skk/leim-list.el にも
      取りこんだ。

この問題は GNU Emacs 20 では普通現れないが、XEmacs では現れうる。
具体的には、/usr/local/lib/xemacs/mule-packages/lisp/leim/ が
/usr/local/lib/xemacs/mule-packages/lisp/skk/ より load-path の上位に
くるため、leim/leim-list.el がロードされてしまい、skk/leim-list.el が
ロードされない。そのため、XEmacs では skk/leim-list.el は用いないこと
にしている。その代わり、XEmacs のパッケージでは auto-autoloads.el が自
動的にロードされるのでこれを利用している。

なお、leim-list.el をロードしないもの (Emacs 19) においても

(require 'skk-setup)

で基本設定ができる。

** skk-isearch の input method 対応。

** Emacs 18 対応。

Nemacs 3.3.2 および Mule 1.1 上で基本的な機能が動くようになった。ただ
し飽くまで非公式対応。この機能は experimental/skk-e18.el により提供さ
れる。

また、Emacs 18 のために必要とされるもの、およびあると便利なものを
patch/e18 ディレクトリに収録した。

** 候補表示が長い場合に対応する機能 (専用の window を使う)。

候補一覧が一行では表示しきれない場合に、ウィンドウを分割してそこに候補
一覧が表示されるようになった。操作性に変更はない。

** JIS X 0213 サポート。

skk-jisx0213.el によりこの機能が提供される。

** 仮名入力対応 (experimental/nicola)。

experimental/nicola ディレクトリに、SKK を仮名入力対応させるためのプロ
グラムが追加された。

** skk-look による ispell を使用した修正。

skk-look で英単語など検索する際に、ispell で綴りを修正する機能が追加さ
れた。

** APEL のバージョンチェック。

APEL のバージョンをチェックするため、product.el を利用するようになりました。
現在、APEL は 10.6 以降が必要となります。

** 新しいカーソル制御機構を採用。

GNU Emacs においては、ccc.el により新しいカーソル制御機構が提供される。
XEmacs については本体がより良い制御機構を持っていることが分かったので、
かなり簡潔な記述でカーソル制御ができるようになった。

** 関数 skk-set-cursor-properly は廃止されました。

isearch の設定で add-hook している場合など、 skk-set-cursor-properly
の設定を削除して下さい。

** custom group の見直し。

カスタマイズし易いように、custom group の見直しが行われた。

** Input Method としての機能の改善。

Emacs 20 の為の修正。SKK を Emacs の Input Method として使用していると
き、関数 `read-from-minibuffer' の 第 7 引数 INHERIT-INPUT-METHOD を
非 nil にしても正しく動作しないバグが修正された。

** Canna との相性の改善。

SKK を起動する前に Canna の設定をしていると、スペースを押しても変換で
きない問題が修正された。

** いくつかのバグの修正。

以下の関数のバグが修正された (洩れがあったら追加してください)。

o skk-count-jisyo-candidates-original
o skk-clock
o skk-num-type3-kanji-1


* Daredevil branch 11.1

** skk.el の更なるシェイプアップを検討。

別ファイルにて提供できる特殊機能があれば、更に別にする、という方針で skk.el
内を散策。変換候補に overlay/extent をかける機能も分離できるかもしれないが、
分離しても小さいので、とりあえず見送り。他になんかあるかな？ ひらがな -> カ
タカナ以外の region 変換機能、とか。

とりあえず過去別だったカーソル変化機能を skk-cursor.el として分離。
分離した変数・関数のプレフィックスを skk-cursor- に統一。

** ミニマムの構成を skk.el のみにする、というのを検討。

*** skk-foreword.el を skk.el と統合。

skk-foreword.el はユーザー変数を定義する前に定義しておく必要のあるマクロ、イ
ンライン関数、変数、定数などをまとめたものでった。skk-foreword.el を skk.el
に統合することで当然ユーザー変数の見通しは悪くなる (どんな変数があるのかな〜、
と思ったらプログラムファイルを見るのが手っ取り早いよね？)。

*** ユーザー変数の見通しが悪いのを考慮。

wl なんかを参考に、ユーザー変数、システム変数・定数をまとめて、skk-vars.el
を作った。特殊機能を提供する別ファイルの変数も全部ここに閉じ込める。カスタマ
イズに興味のあるユーザーは skk-vars.el を見れば一覧が得られる。

これにより下記 2 点のメリットあり。

o 全てのプログラムから (eval-when-compile (require 'skk-vars)) することでバ
  イトコンパイルの際の変数に関する Warning が圧倒的に減る。

o skk.el から (require 'skk-vars) することで、特殊機能に関する変数の boundp
  チェックが不要になる。

*** 本体、特殊機能提供プログラムの両方で使うマクロ、インライン関数の取り扱い。

これらを skk.el に入れておくわけにはゆかない (特殊機能提供プログラムから
skk.el を require するから無限 loop に陥いる)。仕方がないので skk-macs.el を
作る。全プログラムから (eval-when-compile (require 'skk-macs)) する。

*** 結局、現状は...。

ミニマムの機能しか使わなくとも skk.el, skk-macs.el, skk-vars.el の 3 つを要
することとなり、ファイルの数は main trunk よりも増えているが、各ファイルの役
割を再確認したので、これを土台に更なる検討を加える。

ちなみに APEL については何も検討していません。APEL から必要なものだけを機械
的に取り出す...なんてことはできるんでしょうか？ (^^;; とりあえず SKK 側の構
成を考えてからね。


* 10.57

** `skk-defmacro-cond', `skk-defsubst-cond' と `skk-defun-cond' を廃止。
代りに `defmacro', `defsubst' と `defun' をそれぞれ `static-cond' と組み合わ
せて使用。効果は同じ。バイトコンパイルファイルは、Mule2, Mule3, Mule4,
XEmacs 間で共有できない。

** skk.el からカーソルの変化機能のみを取り出し、skk-cursor.el を revive.

* 10.56

** Minor bug fixed.

** Experimental program skk-lookup.el supports okuri-ari henkan.

** Experimental program skk-abbrev.el is provided.

* 10.55

** Minor bug fixed.

** Types of customization are more specific.

** Experimental program skk-lookup.el (Lookup gateway) is provided.
  You can use many dictionaries by Lookup to get candidates.

* 10.54

** Now SKK-MK will diligently search APEL installed directory automatically
(not only apel modules directory but also emu modules directory).

** Now you can any variables in SKK-CFG in the command line.

** All version specific functions and macros are defined with
`skk-defmacro-cond', `skk-defsubst-cond' and `skk-defun-cond' to maintain
easily.

** Experimentally, all conditions of `skk-defmacro-cond',
`skk-defsubst-cond' and `skk-defun-cond' are evaluated statically (when
compiling).  All elc files will be incompatible between Mule2, Mule3, Mule4
and XEmacs.

** All faces are defined with `defface'.

** Emacs Lisp programs are moved to top directory.

** Now you can install tutorial and info files.

** Now you don't have to copy skk-autoloads.el manually.

** Now use extents (not overlay emulation) for XEmacs.

** vip.el 3.7 is provided (for Emacs 19) by Satou Sen-sei.  Now it
works well with SKK by itself.  skk-vip.el is discarded.

** Experimental package skk-tutcode.el is provided by GUNJI Takao
<gunji@sils.shoin.ac.jp>.  Now you can imput Japanese by TUT-code with SKK.
