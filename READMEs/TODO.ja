-*- outline -*-

             $Date: 2005/08/25 03:05:39 $
	     $Id: TODO.ja,v 1.2 2005/08/25 03:05:39 skk-cvs Exp $

* 変換モード

** 変換モード毎に異なる動作をするコマンド

例えば、skk-toggle-characters (`skk-toggle-kana'、`q' キーにバインド)
では、■モードでは、ひらがなモードとカタカナモードをトグルで変更し、
▽モードでは入力モードに変更を加えることなく、見出し語をひらがな <->
かたかなでトグルし、確定します。

このように変換モードの状態により異なる動作をするコマンドは SKK の中に
は沢山あります。これをもう少し統一的に書けないかな、とふと思いました。

* Hint from MSIME

** 手書き検索

ああいう機能欲しいよね...。実現困難か...。

** 同音異義語に対する意味のバルーン表示 (MSIME98 以降)

漢字に弱いぼく (中島) としては絶対欲しい!  XEmacs と skk-lookup.el と
itimer.el があれば実現は比較的簡単 (itimer は、候補表示後一定期間入力
がないことをチェックするのに利用)?  バルーン表示は GNU Emacs では無理
かな。itimier.el の機能は GNU Emacs では?

あと、SKK では 4 番目までの候補は MSIME と異なりインライン表示されるが、
これらの意味はどうやって表示しましょ?

(注: 意味表示は skk-annotation で実現。バルーン表示は TODO)

** カスタマイズ

Emacs のカスタマイズはあまりかっこ良くないし、使いたい、という気になら
ないですね...。pySKK ではかっこ良くて使い易い GUI を提供したいもんです。
Emacs では改善の余地なし?

(注: skk-cus はあくまで試作品。ということで TODO)

* 報告された，または確認されているバグ (未修正)

** skk-undo-kakutei-word-only 下での undo 情報の喪失

笠原＠九大さんよりのご報告

> また別の、SKK にバッファの内容を喰われて undo で戻せない現象に当たった
> ので報告します。
> 
> 1) ある行で(うっかり)▽モードに入ってしまう
> 2) そのまま(気づかず)カーソルを下に数行移動
> 3) そこで気付いて(いつもの癖で) C-g を押すと、間の行が全部消えてしまう
> 
> 1)
> 1行目
> 2行目▽あ■←カーソル
> 3行目
> 4行目
> 5行目
> 
> 2)
> 1行目
> 2行目▽あ
> 3行目
> 4行目■←カーソル
> 5行目
> 
> 3)
> 1行目
> 2行目■←カーソル
> 5行目
> 
> 上方向への移動では起こりません。


本件に関する T の考え． 一応今回の件は skk-undo-kakutei-word-only が
non-nil の環境で

 1. keyboard-quit のあとの undo がおかしい
 2. skk-kakutei したあとの undo がおかしい

の 2点が問題．修正の方針を一応考えてみた．

 o keyboard-quit の際はまず skk-kakutei を呼んで
   skk-undo-kakutei-word-only の制御を脱してからその後の処理をする
 
   → 問題が単純化される．あとは 2 のみ解決すればよい
 
 o skk-kakutei の前に強制的に skk-previous-point に移動する
 
   → skk-undo-kakutei-word-only のときの変換領域制御
 
 o skk-set-henkan-point-subr が明示的に呼び出されたときは
   一時的に skk-undo-kakutei-word-only を nil に設定し，
   確定されたら non-nil に戻す
 
この変更をすると，以下の副作用が出る．

 o C-g で消えるのが ▽ から point 移動前の位置までに限定される．
   逆に point が前方に移動されていてもその範囲が消される．
 
 o ▽モードで何か入力しようとすると強制的にpoint 移動前の位置に移動
   させられる．
 
結局のところ，簡単にやろうとすると
 
 o skk-undo-kakutei-word-only のときは特に変換領域を想定し，undo の
   整合性のために変換領域以外の変更を禁止し，変換領域内の編集も変換
   領域の最後尾に限定する．
 
という仕様にしなければならない...?

変換領域の設定を本格的に考えなおせば，変換領域内の編集は自由にする
こともできると思うが...
