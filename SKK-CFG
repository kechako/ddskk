;;; -*-Emacs-Lisp-*-

;; SKK-CFG: user configuration file for SKK installation.
;; Copyright (C) 1999 Mikio Nakajima <minakaji@osaka.email.ne.jp>

;; Author: Mikio Nakajima <minakaji@osaka.email.ne.jp>
;; Maintainer: Mikio Nakajima <minakaji@osaka.email.ne.jp>

;; Commentary
;;
;; These values of variables below are default configurations
;; specified in SKK-MK.  If you would like to change some of these,
;; you can edit this file (Do not edit SKK-MK directly).
;;
;; Please note that as to `PREFIX', `LISPDIR', `PACKAGEDIR' and
;; `VERSION_SPECIFIC_LISPDIR', definitions in Makefile (but other than
;; `NONE') overwrite variables defined in SKK-MK and SKK-CFG.
;;
;; This file is composed of major three parts.  GENERIC VARIABLE
;; section, NON-PACKAGE INSTALL RELATED VARIABLE section, and PACKAGE
;; INSTALL RELATED VARIABLE section.
;;
;; You can confirm target directories without an actual installation
;; by M-x SKK-MK-what-where or M-x SKK-MK-what-where-package after
;; load SKK-MK.

;;; Code:
;;;; GENERIC VARIABLE.
;;
;;(setq DOCDIR "./doc")
;;(setq ETCDIR "./etc")
;;(setq SKK-INFOS '("skk.info" "skk.info-1" "skk.info-2" "skk.info-3" "skk.info-4"))
;;(setq SKK-MODULES 
;;      (let ((list '(queue-m stack-m skk-foreword
;;			    skk-gadget skk-isearch skk-auto skk-comp
;;			    skk-kakasi skk-kcode skk-leim skk-look 
;;			    skk-num skk-obsolete skk-server skk-tut
;;			    skk skk-autoloads
;;			    ;; EXPERIMENTAL
;;			    skk-rdbms skk-study
;;			    ;; VIP 3.7
;;			    ;; vip
;;			    )))
;;	(condition-case nil
;;	    (and (require 'viper) (setq list (nconc list (list 'skk-viper))))
;;	  (error) )
;;	(and (or (featurep 'gdbm) (featurep 'dbm) (featurep 'berkdb)
;;		 (featurep 'berkeley-db) )
;;	     (setq list (nconc list (list 'skk-dbm))) )
;;	list ))
;;(setq SKK_PREFIX "skk")
;;(setq SKK-TEXIS '("skk.texi"))
;;(setq SKK-TUTORIALS '("SKK.tut" "SKK.tut.E"))
;;(setq VERSION_SPECIFIC_LISPDIR nil)

;;;; NON-PACKAGE INSTALL RELATED VARIABLE.
;;
;;;; `install-prefix' is defined in install.el of APEL.
;;;; Maybe it is `/usr/local'.
;; (require 'install) ; you need to load install.el first.
;;(setq PREFIX install-prefix)
;;;; automatically detected.
;;(setq LISPDIR (install-detect-elisp-directory PREFIX)))
;;(setq SKK_DATADIR (expand-file-name
;;		     SKK_PREFIX (expand-file-name "share" PREFIX) ))
;;(setq SKK_INFODIR (expand-file-name "info" PREFIX))
;;(setq SKK_LISPDIR (expand-file-name SKK_PREFIX LISPDIR))

;;;; PACKAGE INSTALL RELATED VARIABLE.
;;(setq PACKAGEDIR
;;      (if (boundp 'early-packages)
;;	  (let ((dirs
;;		 (append (if early-package-load-path early-packages)
;;			 (if late-package-load-path late-packages)
;;			 (if last-package-load-path last-packages) ))
;;		dir )
;;	    (while (not (file-exists-p (setq dir (car dirs))))
;;	      (setq dirs (cdr dirs)) )
;;	    dir )))

;;(setq PACKAGE_DATADIR (expand-file-name
;;		       SKK_PREFIX (expand-file-name "etc" PACKAGEDIR) ))
;;(setq PACKAGE_INFODIR (expand-file-name "info" PACKAGEDIR))
;;(setq PACKAGE_LISPDIR (expand-file-name
;;		       SKK_PREFIX (expand-file-name "lisp" PACKAGEDIR) ))

;;; SKK-CFG ends here
