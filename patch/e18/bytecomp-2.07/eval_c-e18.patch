--- eval.c.orig	Fri Nov 15 08:01:42 1991
+++ eval.c	Mon Aug 28 21:36:48 2000
@@ -690,6 +690,8 @@
   return Qnil;
 }
 
+/* better version of this from Hallvard Furuseth.
+ */
 DEFUN ("macroexpand", Fmacroexpand, Smacroexpand, 1, 2, 0,
   "If FORM is a macro call, expand it.\n\
 If the result of expansion is another macro call, expand it, etc.\n\
@@ -708,31 +710,23 @@
 	 in case it expands into another macro call.  */
       if (XTYPE (form) != Lisp_Cons)
 	break;
-      sym = XCONS (form)->car;
-      if (XTYPE (sym) != Lisp_Symbol)
-	break;
+      /* Set SYM, give DEF and TEM right values in case SYM is not a symbol. */
+      def = sym = XCONS (form)->car;
+      tem = Qnil;
       /* Trace symbols aliases to other symbols
 	 until we get a symbol that is not an alias.  */
-      while (1)
+      while (XTYPE (def) == Lisp_Symbol)
 	{
 	  QUIT;
+	  sym = def;
 	  tem = Fassq (sym, env);
 	  if (NULL (tem))
 	    {
 	      def = XSYMBOL (sym)->function;
-	      if (XTYPE (def) == Lisp_Symbol && !EQ (def, Qunbound))
-		sym = def;
-	      else
-		break;
-	    }
-	  else
-	    {
-	      if (XTYPE (tem) == Lisp_Cons
-		  && XTYPE (XCONS (tem)->cdr) == Lisp_Symbol)
-		sym = XCONS (tem)->cdr;
-	      else
-		break;
+	      if (!EQ (def, Qunbound))
+		continue;
 	    }
+	  break;
 	}
       /* Right now TEM is the result from SYM in ENV,
 	 and if TEM is nil then DEF is SYM's function definition.  */
