;;; -*- emacs-lisp -*-
;;; skk-setup.el --- Initial setup for SKK
;; Copyright (C) 2000 Mikio Nakajima <minakaji@osaka.email.ne.jp>

;; Author: Mikio Nakajima <minakaji@osaka.email.ne.jp>
;; Maintainer: SKK Development Team <skk@ring.gr.jp>
;; Version: $Id: skk-setup.el.in,v 1.1.2.10 2000/09/27 13:42:07 minakaji Exp $
;; Keywords: japanese
;; Last Modified: $Date: 2000/09/27 13:42:07 $

;; This file is part of Daredevil SKK.

;; Daredevil SKK is free software; you can redistribute it and/or modify
;; it under the terms of the GNU General Public License as published by
;; the Free Software Foundation; either versions 2, or (at your option)
;; any later version.

;; Daredevil SKK is distributed in the hope that it will be useful
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;; GNU General Public License for more details.

;; You should have received a copy of the GNU General Public License
;; along with Daredevil SKK, see the file COPYING.  If not, write to the Free
;; Software Foundation Inc., 59 Temple Place - Suite 330, Boston,
;; MA 02111-1307, USA.

;;; Commentary:

;;; Code:
(require 'skk-autoloads)
(global-set-key "\C-x\C-j" 'skk-mode)
(global-set-key "\C-xj" 'skk-auto-fill-mode)
(global-set-key "\C-xt" 'skk-tutorial)

;; (add-hook 'isearch-mode-hook
;; 	  (lambda () (and (boundp 'skk-mode) skk-mode
;; 			  (skk-isearch-mode-setup))))
;;
;; (add-hook 'isearch-mode-end-hook
;; 	  (lambda ()
;; 	    (and (boundp 'skk-mode) skk-mode (skk-isearch-mode-cleanup))
;; 		)))

;;(defvar skk-large-jisyo "@DIC@")
;;(defvar skk-aux-large-jisyo "@AUXDIC@")
;;(defvar skk-tut-file "@TUT@")

(add-hook 'isearch-mode-hook
	  (lambda () (and (boundp 'skk-mode) skk-mode
			  (skk-isearch-mode-setup))))

(add-hook 'isearch-mode-end-hook
	  (lambda ()
	    (and (featurep 'skk-isearch) (skk-isearch-mode-cleanup))))

(or (featurep 'xemacs)
    (and (fboundp 'register-input-method)
	 (progn
	   (define-key isearch-mode-map "\C-\\" 'isearch-toggle-input-method)
	   (defadvice isearch-toggle-input-method (around skk-setup-ad activate)
	     (cond ((string-match
		     "^japanese-skk"
		    (format "%s" default-input-method))
		    (let ((skk-isearch-initial-mode-when-skk-mode-disabled 'latin))
		      (skk-isearch-mode-setup)
		      (skk-isearch-skk-mode)))
		   ((null default-input-method)
		    ad-do-it
		    (when (string-match
			   "^japanese-skk"
			   (format "%s" default-input-method))
		      (let ((skk-isearch-initial-mode-when-skk-mode-disabled 'latin))
			(skk-isearch-mode-setup))
		      (inactivate-input-method)))
		   (t
		    ad-do-it)))
	   (defadvice isearch-message-prefix (around skk-setup-ad activate)
	     (cond ((string-match
		     "^japanese-skk"
		    (format "%s" default-input-method))
		    (let (current-input-method) ad-do-it))
		   (t ad-do-it))))))

(provide 'skk-setup)
;;; Local Variables:
;;; End:
;;; skk-setup.el ends here
